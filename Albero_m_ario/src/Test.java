public class Test {

	public static void main(String[] args) {
		Albero_m_ario<Integer> Albero=new Albero_m_ario<Integer>(3);
		Nodo_m_ario<Integer> radice=Albero.addRadice(2);
		radice.printPadre();
		Albero.printnNodiInf();
		Albero.printnNodi();
		radice.printLivello();
		Nodo_m_ario<Integer> _3=Albero.addFiglio(radice, 3, 1);
		Nodo_m_ario<Integer> _2=Albero.addFiglio(radice, 2, 2);
		Nodo_m_ario<Integer> _0=Albero.addFiglio(radice, 0, 0);
		Albero.printRadice();
		radice.infoFigli();
		radice.nFigli();
		Albero.printnNodiInf();
		Albero.printnNodi();
		radice.printLivello();
		_3.printLivello();
		_2.printLivello();
		_0.printLivello();
		Albero.printH();
//		_3.changeInfo(4);
		radice.infoFigli();
		Nodo_m_ario<Integer> _5=Albero.addFiglio(_2, 5, 0);
		_5.printLivello();
		Albero.printH();
		Albero.printnNodiInf();
		Albero.printnNodi();
		Albero_m_ario<Integer> Albero2=new Albero_m_ario<Integer>(3);
		Nodo_m_ario<Integer> radice2=Albero2.addRadice(2);
		Nodo_m_ario<Integer> __3=Albero2.addFiglio(radice2, 6, 1);
		Nodo_m_ario<Integer> __2=Albero2.addFiglio(radice2, 4, 2);
		Nodo_m_ario<Integer> __0=Albero2.addFiglio(radice2, 9, 0);
		radice2.printPadre();
		Albero2.printnNodiInf();
		Albero2.printnNodi();
		radice2.printLivello();
		__3.printLivello();
		__2.printLivello();
		__0.printLivello();
		Albero2.printH();
		Nodo_m_ario<Integer> newRadice=Albero.newRadice(Albero, 1, 0);
		Nodo_m_ario<Integer> _8=Albero.addFiglio(newRadice, 8, 1);
		Albero.printRadice();
		newRadice.infoFigli();
		radice.printPadre();
		Albero.printnNodiInf();
		Albero.printnNodi();
		Albero.addAlbero(Albero2, newRadice, 2);
		Albero.printnNodiInf();
		Albero.printnNodi();
		Albero.printRadice();
		newRadice.printLivello();
		_8.printLivello();
		radice.printLivello();
		_3.printLivello();
		_2.printLivello();
		_0.printLivello();
		_5.printLivello();
		radice2.printLivello();
		__3.printLivello();
		__2.printLivello();
		__0.printLivello();
		Albero.printH();
		Albero.visitaAnticipata();
		Albero.visitaLivelli();
		Albero.visitaPosticipata();
		Albero.visitaSimmetrica();
		newRadice.printLivello();
		_8.printLivello();
		radice.printLivello();
		radice2.printLivello();
		_3.printLivello();
		_2.printLivello();
		_0.printLivello();
		__3.printLivello();
		__2.printLivello();
		__0.printLivello();
		_5.printLivello();
		Albero.printH();
	}

}
